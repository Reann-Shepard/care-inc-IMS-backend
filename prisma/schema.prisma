// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String @unique
  password String

  @@map("user")
}

model Manufacturer {
  id                Int                 @id @default(autoincrement())
  name              String
  devices           Device[]
  repair            Repair[]

  @@map("manufacturer")
}

model Color {
  id                 Int                 @id @default(autoincrement())
  name               String
  devices            Device[]

  @@map("color")
}

model Type {
  id                 Int                 @id @default(autoincrement())
  name               String
  devices            Device[]

  @@map("type")
}

model Device {
  id             Int            @id @default(autoincrement())
  serialNumber   String?         @unique
  manufacturerId Int
  colorId        Int
  typeId         Int
  stockInDate    DateTime?
  sellDate       DateTime?
  packageId      Int?
  deleted        Boolean?
  OrderDevice    OrderDevice[]
  color          Color          @relation(fields: [colorId], references: [id])
  manufacturer   Manufacturer   @relation(fields: [manufacturerId], references: [id])
  package        Package?       @relation(fields: [packageId], references: [id])
  type           Type           @relation(fields: [typeId], references: [id])
  repairDevices  RepairDevice[]

  @@map("device")
}

model OrderDevice {
  deviceId            Int
  orderManufacturerId Int
  device              Device            @relation(fields: [deviceId], references: [id])
  orderManufacturer   OrderManufacturer @relation(fields: [orderManufacturerId], references: [id])

  @@id([deviceId, orderManufacturerId])
  @@map("order_device")
}

model OrderManufacturer {
  id             Int           @id @default(autoincrement())
  orderDate      DateTime
  amount         Int
  OrderDevices   OrderDevice[]

  @@map("order_manufacturer")
}

model Client {
  id       Int       @id
  packages Package[]
  repairs  Repair[]

  @@map("client")
}

model Repair {
  id             Int            @id @default(autoincrement())
  clientId       Int
  manufacturerId Int
  reason         String
  shippingDate   DateTime
  shipId         String
  receivedDate   DateTime?
  client         Client         @relation(fields: [clientId], references: [id])
  manufacturer   Manufacturer   @relation(fields: [manufacturerId], references: [id])
  repairDevices  RepairDevice[] @relation("RepairDevicesOnRepairs")

  @@map("repair")
}

model RepairDevice {
  id       Int    @id @default(autoincrement())
  repairId Int
  deviceId Int
  repair   Repair @relation("RepairDevicesOnRepairs", fields: [repairId], references: [id])
  device   Device @relation(fields: [deviceId], references: [id])

  @@map("repair_device")
}

model OrderCustomer {
  id         Int       @id @default(autoincrement())
  orderDate  DateTime
  orderTotal Int
  rebate     Decimal   @db.Decimal(10, 2)
  finalPaid  Decimal   @db.Decimal(10, 2)
  packages   Package[]

  @@map("order_customer")
}

model Package {
  id                 Int            @id @default(autoincrement())
  clientId           Int?
  fittingDate        DateTime?
  warrantyExpiration DateTime?
  orderCustomerId    Int?
  comments           String?
  devices            Device[]
  client             Client?        @relation(fields: [clientId], references: [id])
  orderCustomer      OrderCustomer? @relation(fields: [orderCustomerId], references: [id])

  @@map("package")
}
